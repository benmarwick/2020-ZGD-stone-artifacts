---
title: "Untitled"
format: 
  html:
    self-contained: true
---

## All artefacts

```{r}
library(tidyverse)
library(readxl)

all_lithics <- 
  read_excel("data/2020 Zhaoguodong all.xlsx", 
             skip = 1)

# how do these levels relate to the numbered stratigraphic units?
lp_phase_1 <- c("L37", "L38", "HT49", "HT50", "HT51")
lp_phase_2 <- c(paste0("L", 13:16), paste0("L", 28:36), 
                paste0("H", 22:23), paste0("HT", 43:47))
lp_phase_3 <- c("HT under the hearth 3", "L12", "HT41", "HT42", "HT48")
neolithic <-  c("HT under the hearth", 
                paste0("HT under the hearth ", 1:2),
                paste0("L", 2:11), paste0("HT", 24:40), 
                paste0("HDM", 1:23))
surface <- "L1"

all_lithics <- 
  all_lithics %>% 
  filter(!is.na(layer...3)) %>% 
  mutate(excavation_units = 
 factor(layer...3,
        levels = layer...3)) %>% 
   mutate(stage = case_when(
  layer...3 %in% lp_phase_1 ~ "Late Pleistocene Phase 1",
  layer...3 %in% lp_phase_2 ~ "Late Pleistocene Phase 2",
  layer...3 %in% lp_phase_3 ~ "Late Pleistocene Phase 3",
  layer...3 %in% neolithic ~  "Holocene",
  layer...3 %in% surface ~    "Surface"
 )) %>% 
  # what do H5-H7 belong to?
  filter(!is.na(stage)) %>% 
  mutate(stage = factor(stage, 
                        levels = c("Late Pleistocene Phase 1",
                                   "Late Pleistocene Phase 2",
                                   "Late Pleistocene Phase 3",
                                   "Holocene",
                                   "Surface"))) 
```

all artefacts

```{r}
ggplot(all_lithics) +
  aes(excavation_units, 
      Total) +
  geom_col() +
  scale_x_discrete(limits = rev) +
  #scale_y_log10() +
  coord_flip()  +
  theme_minimal() 

# this is a good one to put with the strat drawing
ggplot(all_lithics) +
  aes(stage, 
      Total) +
  geom_col() +
  #scale_y_log10() +
  coord_flip()  +
  theme_minimal() 
```


Major lithic components

```{r}
# cores, flakes, retouched tools, debris, chunks, burnt rocks, and minerals
# what is mineral? -> iron ball? 

all_lithics_major_classes <- 
all_lithics %>% 
  rowwise() %>% 
  mutate(bipolar = sum(c(`bipolar core`, `bipolar flake`), na.rm = TRUE))  %>% 
  select(layer...3, 
         cores = `core total`,           
         flakes =  `flake total`,           
        `retouched\npieces` = `tool total`,
         debris = `debris...21`,
         chunks,
         `heat\ntreated` = `burn rocks`,
        mineral = mineral...23,
        bipolar
         ) %>% 
  pivot_longer(-layer...3) %>% 
  mutate(name = factor(name, 
                        levels = c("chunks",
                                   "debris",
                                   "flakes",
                                   "heat\ntreated",
                                   "retouched\npieces",
                                   "cores",
                                   "mineral",
                                   "bipolar"
                                   )))  %>% 
  mutate(stage = case_when(
  layer...3 %in% lp_phase_1 ~ "Late Pleistocene Phase 1",
  layer...3 %in% lp_phase_2 ~ "Late Pleistocene Phase 2",
  layer...3 %in% lp_phase_3 ~ "Late Pleistocene Phase 3",
  layer...3 %in% neolithic ~  "Holocene",
  layer...3 %in% surface ~    "Surface"
 )) %>% 
  # what do H5-H7 belong to?
  filter(!is.na(stage)) %>% 
  mutate(stage = factor(stage, 
                        levels = c("Late Pleistocene Phase 1",
                                   "Late Pleistocene Phase 2",
                                   "Late Pleistocene Phase 3",
                                   "Holocene",
                                   "Surface"))) %>% 
  group_by(stage, name) %>% 
  summarise(sum = sum(value, na.rm = TRUE))

ggplot(all_lithics_major_classes) +
  aes(name,
      sum) +
  geom_col() +
  facet_wrap(~ fct_rev(stage),
             ncol = 1,
             scales = "free_y") +
  scale_y_log10() +
  xlab("") +
  ylab("") +
  theme_bw()


ggsave("figures/lithic-classes-per-phase.png",
       dpi = 600,
       h = 10, 
       w = 8)
```

Raw material types

```{r}
all_flakes <- 
  read_excel("data/2020 zhaoguodong flake.xlsx",
             sheet = "Sheet1",
             skip = 1)

# some artefacts are not assigned to a phase, is that ok?
all_flakes %>% 
  select(layer,
         `raw material`) %>% 
    mutate(stage = case_when(
  layer %in% lp_phase_1 ~ "Late Pleistocene Phase 1",
  layer %in% lp_phase_2 ~ "Late Pleistocene Phase 2",
  layer %in% lp_phase_3 ~ "Late Pleistocene Phase 3",
  layer %in% neolithic ~  "Holocene",
  layer %in% surface ~    "Surface"
 )) %>% 
  group_by(stage) %>% 
  tally()

# which levels are not assigned?
all_flakes %>% 
  select(layer,
         `raw material`) %>% 
    mutate(stage = case_when(
  layer %in% lp_phase_1 ~ "Late Pleistocene Phase 1",
  layer %in% lp_phase_2 ~ "Late Pleistocene Phase 2",
  layer %in% lp_phase_3 ~ "Late Pleistocene Phase 3",
  layer %in% neolithic ~  "Holocene",
  layer %in% surface ~    "Surface"
 )) %>% 
  filter(is.na(stage)) %>% 
  group_by(layer) %>% 
  tally()


all_flakes_with_phases <- 
all_flakes %>% 
  select(layer,
         `raw material`) %>% 
    mutate(stage = case_when(
  layer %in% lp_phase_1 ~ "Late Pleistocene Phase 1",
  layer %in% lp_phase_2 ~ "Late Pleistocene Phase 2",
  layer %in% lp_phase_3 ~ "Late Pleistocene Phase 3",
  layer %in% neolithic ~  "Holocene",
  layer %in% surface ~    "Surface"
 )) %>% 
  # what do H5-H7 belong to?
  filter(!is.na(stage)) %>% 
  mutate(stage = factor(stage, 
                        levels = c("Late Pleistocene Phase 1",
                                   "Late Pleistocene Phase 2",
                                   "Late Pleistocene Phase 3",
                                   "Holocene",
                                   "Surface"))) %>% 
  mutate(raw_material = case_when(
    `raw material` == "A" ~ "chert\n(black)",
    `raw material` == "B" ~ "chert\n(grey)",
    `raw material` == "C" ~ "chert\n(black)",
    `raw material` == "D" ~ "chert\n(stripe)",
    `raw material` == "E" ~ "quartzite\n(grey-white)",
    `raw material` == "F" ~ "quartzite\n(grey-white)",
    `raw material` == "G" ~ "limestone",
    `raw material` == "H" ~ "opal",
    `raw material` == "I" ~ "siltstone",
    `raw material` == "J" ~ "chalcedony",
    `raw material` == "K" ~ "crystal\nquartz",
    `raw material` == "L" ~ "packsand",
    `raw material` == "M" ~ "marlstone",
    .default = "others"
  )) %>% 
  mutate(raw_material = fct_infreq(raw_material))

# check how many raw material types per stage
all_flakes_with_phases %>% 
  group_by(stage) %>% 
  summarise(nd = n_distinct(raw_material))


ggplot(all_flakes_with_phases) +
  aes(raw_material) +
  geom_bar() +
  facet_wrap(~ fct_rev(stage),
             ncol = 1,
             scales = "free_y") +
  #scale_y_log10() + 
  xlab("") +
  theme_bw()
# looks a bit different from what's in the paper, no opal here, generally less diverse than in the paper, what is 'coloured black' chert?

ggsave("figures/lithic-raw-material-per-phase.png",
       dpi = 600,
       h = 10, 
       w = 8)
```
  
  
Flake attributes

```{r}

all_flakes_metrics <- 
all_flakes %>% 
  mutate(thickness = parse_number(thickness)) %>% 
  select(layer,
         where(is.numeric)) %>% 
  pivot_longer(-layer) %>% 
  mutate(attribute = case_when(
  name == "length" ~ "Length (mm)",
  name == "width" ~ "Width (mm)",
  name == "thickness" ~ "Thickness (mm)",
  name == "mass" ~ "Mass (g)",
  name == "width of platform" ~ "Platform width (mm)",
  name == "thickness of platform" ~ "Platform thickness (mm)",
  name == "cortex proportion" ~ "Dorsal cortex (prop)",
  name == "angle" ~ "Exterior platform angle",
  name == "inner angle" ~ "Interior platform angle",
 ))  %>% 
  filter(!is.na(attribute)) %>% 
  mutate(attribute = factor(attribute, 
                        levels = c("Length (mm)",
                                   "Width (mm)",
                                   "Thickness (mm)",
                                   "Mass (g)",
                                   "Platform width (mm)",
                                   "Platform thickness (mm)",
                                   "Exterior platform angle",
                                   "Interior platform angle",
                                   "Dorsal cortex (prop)"))) %>%  
  mutate(stage = case_when(
  layer %in% lp_phase_1 ~ "Late\nPleistocene\nPhase 1",
  layer %in% lp_phase_2 ~ "Late\nPleistocene\nPhase 2",
  layer %in% lp_phase_3 ~ "Late\nPleistocene\nPhase 3",
  layer %in% neolithic ~  "Holocene",
  layer %in% surface ~    "Surface"
 )) %>% 
  # what do H5-H7 belong to?
  filter(!is.na(stage)) %>% 
  mutate(stage = factor(stage, 
                        levels = c("Late\nPleistocene\nPhase 1",
                                   "Late\nPleistocene\nPhase 2",
                                   "Late\nPleistocene\nPhase 3",
                                   "Holocene",
                                   "Surface"))) 

library(ggbeeswarm)
library(ggpmisc)
ggplot(all_flakes_metrics) +
  aes(stage, value) +
  geom_boxplot(outlier.shape = NA) +
  geom_quasirandom(alpha = 0.1) +
  facet_wrap(~ attribute,
             scales = "free_y") +
  stat_multcomp(geom = "text_pairwise",
    aes(colour = after_stat(p.value) > 0.05),
        size = 0.1, 
        small.p = T,
    mc.cutoff.p.value = 0.05) +
  xlab("") +
  ylab("") +
  theme_bw()

ggsave("figures/lithic-flake-metrics.png",
       dpi = 600,
       h = 8, 
       w = 12)

```


Core attributes

```{r}
core_attributes <- 
  read_excel("data/2020zhaoguodong core.xlsx",
             skip = 1)

core_attributes_stages <- 
core_attributes %>% 
  select(layer,
         where(is.numeric)) %>% 
  pivot_longer(-layer) %>% 
  mutate(attribute = case_when(
  name == "length" ~ "Length (mm)",
  name == "width" ~  "Width (mm)",
  name == "thickness" ~  "Thickness (mm)",
  name == "mass" ~   "Mass (g)",
  name == "platform number" ~ "Platforms"
 ))  %>% 
  filter(!is.na(attribute)) %>% 
  mutate(attribute = factor(attribute, 
                        levels = c("Length (mm)",
                                   "Width (mm)",
                                   "Mass (g)",
                                   "Platforms",
                                   "Thickness (mm)"))) %>%  
  mutate(stage = case_when(
  layer %in% lp_phase_1 ~ "Late\nPleistocene\nPhase 1",
  layer %in% lp_phase_2 ~ "Late\nPleistocene\nPhase 2",
  layer %in% lp_phase_3 ~ "Late\nPleistocene\nPhase 3",
  layer %in% neolithic ~  "Holocene",
  layer %in% surface ~    "Surface"
 )) %>% 
  # what do H5-H7 belong to?
  filter(!is.na(stage)) %>% 
  mutate(stage = factor(stage, 
                        levels = c("Late\nPleistocene\nPhase 1",
                                   "Late\nPleistocene\nPhase 2",
                                   "Late\nPleistocene\nPhase 3",
                                   "Holocene",
                                   "Surface"))) 

library(ggbeeswarm)
library(ggpmisc)
ggplot(core_attributes_stages) +
  aes(stage, value) +
  geom_boxplot(outlier.shape = NA) +
  geom_quasirandom(alpha = 0.2) +
  facet_wrap(~ attribute,
             scales = "free_y") +
  stat_multcomp(geom = "text_pairwise",
    aes(colour = after_stat(p.value) > 0.05),
        size = 0.1, 
        small.p = T,
    mc.cutoff.p.value = 0.05) +
  xlab("") +
  ylab("") +
  theme_bw()

# core types
core_attributes_types <- 
core_attributes %>% 
  select(layer,
         type)   %>% 
  filter(!is.na(type)) %>% 
   mutate(type = case_when(
    type == "A1" ~ "single platform core",
    type == "A2" ~ "double platform core",
    type == "A3" ~ "multi-platform core",
    type == "A4" ~ "multi-platform core",
    type == "B1" ~ "bipolar core",
    type == "B2" ~ "bipolar core")) %>% 
  mutate(stage = case_when(
  layer %in% lp_phase_1 ~ "Late\nPleistocene\nPhase 1",
  layer %in% lp_phase_2 ~ "Late\nPleistocene\nPhase 2",
  layer %in% lp_phase_3 ~ "Late\nPleistocene\nPhase 3",
  layer %in% neolithic ~  "Holocene",
  layer %in% surface ~    "Surface"
 )) %>% 
  # what do H5-H7 belong to?
  filter(!is.na(stage)) %>% 
  mutate(stage = factor(stage, 
                        levels = c("Late\nPleistocene\nPhase 1",
                                   "Late\nPleistocene\nPhase 2",
                                   "Late\nPleistocene\nPhase 3",
                                   "Holocene",
                                   "Surface"))) 

ggplot(core_attributes_types) +
  aes(stage, 
      fill = type) +
  geom_bar() +
  coord_flip()  +
  theme_minimal() +
  theme(legend.position = c(0.5, 0.3))  +
  xlab("")  +
  scale_fill_viridis_d()

ggsave("figures/lithic-core-types.png",
       dpi = 600,
       h = 6, 
       w = 8,
       bg = "white")
```


```{r}
# core types using the summary data from HY, rather than the raw data

core_types <- 
  read_excel("data/summary-data-for-core-types-only.xlsx",
             skip = 1) %>% 
  filter(Category == "Core") %>% 
  select(-Category) %>% 
  pivot_longer(-Type) %>% 
    mutate(stage = case_when(
  name == "Phase 1" ~ "Late\nPleistocene\nPhase 1",
  name == "Phase 2"  ~ "Late\nPleistocene\nPhase 2",
  name == "Phase 3"  ~ "Late\nPleistocene\nPhase 3",
  name == "Neolithic level" ~       "Holocene",
  name == "Neolithic top unit" ~    "Surface"
 )) %>% 
  # what do H5-H7 belong to?
  filter(!is.na(stage)) %>% 
  mutate(stage = factor(stage, 
                        levels = c("Late\nPleistocene\nPhase 1",
                                   "Late\nPleistocene\nPhase 2",
                                   "Late\nPleistocene\nPhase 3",
                                   "Holocene",
                                   "Surface"))) 

ggplot(core_types) +
  aes(x = stage, 
      y = value,
      fill = Type) +
  geom_col() +
  coord_flip()  +
  theme_minimal() +
  theme(legend.position = c(0.5, 0.3))  +
  xlab("")  +
  scale_fill_viridis_d()

ggsave("figures/lithic-core-types-from-summary-table.png",
       dpi = 600,
       h = 6, 
       w = 8,
       bg = "white")
```


Radiocarbon ages


```{r}
c14_ages <- 
  read_excel("data/C14 results of zgd.xlsx",
             skip = 1)

squares_on_strat_plot <- 
  c("N46E47", 
    "N46E48", 
    "N45E49", 
    "N45E50", 
    "N45E51")

# reading ages and depths off the strat plot
strat_with_dates_on_strat_plot <- 
  tribble(~Stratigraphy, ~depth, ~lab_no,
    "2020N45E53L1",     0.5,       "Beta - 605198",       
    "2016L12",          1.6,       "Beta - 455945",    
    "2016L21",          2.8,       "Beta - 455946",    
    "2020N46E50L10",    3.1,       "Beta - 580436",    
    "2016L30",          3.3,       "Beta - 455947",     
    "2020N46E51L14",    3.6,       "Beta - 580437",     
    "2016L42-1",        4.18,      "Beta - 455948",     
    "2016L42-2",        4.2,       "Beta - 436101",     
    "2016L42-3",        4.22,      "Beta - 436102",    
    "2016HT11",         4.6,       "Beta - 455949",    
    "2016L67",          6.5,       "Beta - 445878",    
    "2020HT51",         6.9,       "Beta - 576105",      
    "2020HT51",         7.0,       "Beta - 576104"    
    )

c14_ages_clean <- 
c14_ages %>% 
  separate_wider_delim(`Coventional Radiocarbon age (BP)`,
           names = c("age", "error"),
           delim = "+/-",
           cols_remove = FALSE) %>% 
  mutate(age = parse_number(age),
         error = parse_number(error)) %>% 
  mutate(square = str_extract(Stratigraphy, "N.{5}"),
         north = str_extract(square, "N.{2}"),
         east = str_extract(square, "E.{2}"),
         level = str_extract(Stratigraphy, "L.{1,2}"),
         level_num = parse_number(level),
         other_level = str_extract(Stratigraphy, "H.{1,3}"),
         lab_no = Lab.no.) %>% 
  right_join(strat_with_dates_on_strat_plot,
             by = join_by(lab_no)) %>% 
  arrange(age) %>% 
  mutate(lab_no = fct_reorder(lab_no, age))
# this square is not on the excavation map: N51E48

library(rcarbon)
xx <- 
  rcarbon::calibrate(x= c14_ages_clean$age,
            errors=c14_ages_clean$error,
            calCurves='intcal20',
            ids=c14_ages_clean$lab_no)

multiplot(xx,
          decreasing=TRUE,
          rescale=TRUE,
          HPD=TRUE,
          col.fill = factor(c14_ages_clean$Material),
          cex.id = 0.5,
          label.pos=0.1,
          label.offset=5500,
          xlim = c(55000, 10000))

library(c14bazAAR)

c14_ages_clean_list <- 
as.c14_date_list(data.frame(c14age = c14_ages_clean$age, 
                            c14std = c14_ages_clean$error,
                            labnr = c14_ages_clean$lab_no,
                            depth = c14_ages_clean$depth,
                            material = c14_ages_clean$Material))

c14_ages_clean_list_calib <- 
c14bazAAR::calibrate(
  c14_ages_clean_list,
  choices = c("calprobdistr"),
  ids = c14_ages_clean$lab_no,
  sigma = 1
)

c14_ages_cal_dens <- 
  c14_ages_clean_list_calib %>% 
  tidyr::unnest(cols = c("calprobdistr")) %>% 
    mutate(labnr = fct_reorder(labnr, c14age))

c14_ages_cal_dens %>%
  ggplot() +
  # a special geom for ridgeplots is provided by the ggridges package
  ggridges::geom_ridgeline(
    aes(x = -calage + 1950, 
        y = labnr, 
        colour = material,
        fill = material,
        height = density),
    scale = 50
  ) +
  xlab("age calBC/calAD") +
  ylab("dates") +
  theme_minimal()

library(Bchron)


c14_ages_clean_out = 
               Bchronology(ages =          c14_ages_clean$age,
                           ageSds =        c14_ages_clean$error, 
                           calCurves = rep('intcal20', 
                                      nrow(c14_ages_clean)),
                           positions=      c14_ages_clean$depth, 
                           ids=     c14_ages_clean$lab_no, 
                           predictPositions=seq(0,
                                                max(c14_ages_clean$depth),
                                                by=1))

# use this one, with the strat plot, 
zgd_c14_ages_depth_age_plot <- 
plot(c14_ages_clean_out,
    dateHeight = 0.3,
     chronTransparency = 0.2,
     chronCol = "grey80",
     scaleReverse = FALSE,
     dateLabels = TRUE,
     dateLabelSize = 2) +
     labs(x = 'Age (cal. years BP)',
          y = 'Depth (m)') +
  theme(axis.text.x = element_text(angle = 90,
                                   hjust = 0,
                                   vjust = 0.5)) +
  scale_x_continuous(limits = c(0,47000), expand = c(0, 0)) 

ggsave("figures/c14-age-depth-fit.png",
       dpi = 600,
       h = 6, 
       w = 8,
       bg = "white")

```


```{r}
# add oxygen isotope plot
library(gsloid)
mis_last_50ka <- LR04_MISboundaries[LR04_MISboundaries$LR04_Age_ka_start <= 50, ]


global_oxygen_isotope_curve_plot <- 
ggplot(lisiecki2005, 
       aes(Time,
           d18O)) +
  geom_line() +
  geom_vline(data = mis_last_50ka,          # add MIS lines
             aes(xintercept = LR04_Age_ka_start),
             colour = "blue") +
  annotate("text", 
           label = paste0("MIS ", mis_last_50ka$label_MIS), 
           x = mis_last_50ka$LR04_Age_ka_mid,
           y = 3,
           size = 3) +
    annotate("text", 
           label = "MIS 3", 
           x = 40,
           y = 3,
           size = 3) +
  scale_x_continuous(limits = c(0,47), 
                     expand = c(0, 0),
                     name = "x 1000 years ago") +
  scale_y_reverse(name = bquote(delta^18*O)) +
  theme_bw() 
```

```{r}
library(cowplot)

plot_grid(zgd_c14_ages_depth_age_plot,
          global_oxygen_isotope_curve_plot,
          ncol = 1,
          rel_heights = c(1, 0.3),
          align = "v")

ggsave("figures/c14-age-depth-fit-oxygen-isotope.png",
       dpi = 600,
       h = 10, 
       w = 8,
       bg = "white")
```



